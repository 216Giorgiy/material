// stylelint-disable scss/dollar-variable-default
$progress-circular-size-in-px:         ($progress-circular-size / 1rem * $font-size-root / 1px);
$progress-circular-spinner-animation:  progress-circular-spinner-rotate #{$progress-circular-animation-duration} #{$transition-timing-function-standard} infinite;
$progress-circular-spinner-dasharray:  (($progress-circular-size - $progress-circular-spinner-width) * 3.1415926 / 1rem * $font-size-root);
$progress-circular-spinner-transition: '0% { stroke-dashoffset: #{$progress-circular-spinner-dasharray * 0.95}; transform: rotate(0); } 12.5% { stroke-dashoffset: #{$progress-circular-spinner-dasharray * 0.2}; transform: rotate(0); } 12.51% { stroke-dashoffset: #{$progress-circular-spinner-dasharray * 0.2}; transform: rotateX(180deg) rotate(72.5deg); } 25% { stroke-dashoffset: #{$progress-circular-spinner-dasharray * 0.95}; transform: rotateX(180deg) rotate(72.5deg); } 25.1% { stroke-dashoffset: #{$progress-circular-spinner-dasharray * 0.95}; transform: rotate(270deg); } 37.5% { stroke-dashoffset: #{$progress-circular-spinner-dasharray * 0.2}; transform: rotate(270deg); } 37.51% { stroke-dashoffset: #{$progress-circular-spinner-dasharray * 0.2}; transform: rotateX(180deg) rotate(161.5deg); } 50% { stroke-dashoffset: #{$progress-circular-spinner-dasharray * 0.95}; transform: rotateX(180deg) rotate(161.5deg); } 50.01% { stroke-dashoffset: #{$progress-circular-spinner-dasharray * 0.95}; transform: rotate(180deg); } 62.5% { stroke-dashoffset: #{$progress-circular-spinner-dasharray * 0.2}; transform: rotate(180deg); } 62.51% { stroke-dashoffset: #{$progress-circular-spinner-dasharray * 0.2}; transform: rotateX(180deg) rotate(251.5deg); } 75% { stroke-dashoffset: #{$progress-circular-spinner-dasharray * 0.95}; transform: rotateX(180deg) rotate(251.5deg); } 75.01% { stroke-dashoffset: #{$progress-circular-spinner-dasharray * 0.95}; transform: rotate(90deg); } 87.5% { stroke-dashoffset: #{$progress-circular-spinner-dasharray * 0.2}; transform: rotate(90deg); } 87.51% { stroke-dashoffset: #{$progress-circular-spinner-dasharray * 0.2}; transform: rotateX(180deg) rotate(341.5deg); } 100% { stroke-dashoffset: #{$progress-circular-spinner-dasharray * 0.95}; transform: rotateX(180deg) rotate(341.5deg); }';
// stylelint-enable

@function progress-circular-spinner($color) {
  @return str-replace(url('data:image/svg+xml;charset=utf8,%3Csvg focusable="false" preserveAspectRatio="xMidYMid meet" style="height: #{$progress-circular-size}; width: #{$progress-circular-size};" viewBox="0 0 #{$progress-circular-size-in-px} #{$progress-circular-size-in-px}" xmlns="http://www.w3.org/2000/svg"%3E%3Cstyle type="text/css"%3E@-webkit-keyframes progress-circular-spinner-rotate { #{$progress-circular-spinner-transition} } @keyframes progress-circular-spinner-rotate { #{$progress-circular-spinner-transition} }%3C/style%3E%3Ccircle cx="50%" cy="50%" fill="transparent" r="#{($progress-circular-size - $progress-circular-spinner-width) / 2rem * $font-size-root / 1px}" style="-webkit-animation: #{$progress-circular-spinner-animation}; animation: #{$progress-circular-spinner-animation}; stroke: #{$color}; stroke-dasharray: #{$progress-circular-spinner-dasharray}; stroke-width: #{$progress-circular-spinner-width / 1rem * $font-size-root}; transform-origin: 50% 50%;"%3E%3C/circle%3E%3C/svg%3E'), '#', '%23');
}

.progress-circular,
.spinner-border {
  animation: progress-circular-rotate ($progress-circular-animation-duration / 2) linear infinite;
  color: $progress-circular-spinner-bg;
  height: $progress-circular-size;
  overflow: hidden;
  position: relative;
  text-indent: 100%;
  width: $progress-circular-size;

  &::after {
    border-radius: 50%;
    content: progress-circular-spinner($progress-circular-spinner-bg);
    display: block;
    height: $progress-circular-size;
    position: absolute;
    top: 0;
    left: 0;
    text-indent: 0;
    width: $progress-circular-size;
  }
}

@each $color, $values in $theme-colors {
  .progress-circular-#{$color},
  .spinner-border.text-#{$color}:not(.spinner-border-reverse) {
    &::after {
      content: progress-circular-spinner(theme-color($color));
    }
  }
}

.spinner-border-reverse {
  animation-duration: ($progress-circular-animation-duration * 2);
  animation-name: progress-circular-rotate-reverse;
  animation-timing-function: $transition-timing-function-standard;

  &::after {
    border: $progress-circular-spinner-width solid currentColor;
    border-right-color: transparent;
    content: '';
  }
}

@keyframes progress-circular-rotate {
  0% {
    transform: rotate(0);
  }

  100% {
    transform: rotate(360deg);
  }
}

@keyframes progress-circular-rotate-reverse {
  0% {
    transform: rotate(0);
  }

  25% {
    transform: rotate(1170deg);
  }

  50% {
    transform: rotate(2340deg);
  }

  75% {
    transform: rotate(3510deg);
  }

  100% {
    transform: rotate(4680deg);
  }
}
